class:: SFPlayer
summary:: A soundfile player
categories:: UGens>InOut, UGens>Buffer
related:: Classes/VDiskIn, Classes/SoundFile, Classes/SoundFileView, Classes/SFPlayerView


DESCRIPTION::
SFPlayer plays sound files directly from disk. It also has a convenient link::#-gui::.

The most common use is:
code::SFPlayer.new.gui:: or code::SFPlayer.new("/path/to/soundfile").gui::. See examples below.

CLASSMETHODS::

METHOD:: new

ARGUMENT:: path
The path to a soundfile. Can be code::nil:: for choosing the file later.

ARGUMENT:: outbus
The bus to output to. Defaults to code::0:: (the first physical output).

ARGUMENT:: server
The server to use. If code::nil::, code:: Server.default:: will be used.

ARGUMENT:: skin
Optionally an instance of code::SFPlayerSkin::, controlling the color scheme of the GUI when shown.

ARGUMENT:: autoShowOpenDialog
If code::true:: and no path is specified, an Open Dialog will be shown upon creating new instance to choose the file.

ARGUMENT:: autoBootServer
If code::true:: and the server is not running, it will be booted automatically.

ARGUMENT:: autoSetSampleRate
If code::true:: and the server is booted automatically, its sampleRate will be set to the file's sampleRate.

ARGUMENT:: autoSetOutputChannels
If code::true:: and the number of channels in the file exceeds server's number of output channels, as well as the server is booted automatically, its number of output channels will be increased to match the number of channels in the soundfile.


INSTANCEMETHODS::


METHOD:: gui
Show a GUI of the code::SFPlayer::. This creates an instance of link::Classes/SFPlayerView::, stored under link::#-view::.

ARGUMENT:: argBounds
Bounds of the gui. If code::nil::, a default size will be used.

ARGUMENT:: doneAction
Action to be performed after opening the gui and loading the soundfile into the SoundFileView.

ARGUMENT:: onCloseAction
Action to be performed after closing the gui.

ARGUMENT:: parent
Optionally a parent view to embed this code::SFPlayerView:: in.

returns:: this code::SFPlayer:: (not the code::SFPlayerView::)

METHOD:: play
Play the file from the current position;

METHOD:: stop
Stop playing. code::startTime:: is left at the original value;

ARGUMENT:: updateStart
If code::true::, the cursor in the GUI and other dependants will be reset to the previous start postion.

METHOD:: pause
Stop playing. code::startTime:: is updated to the current playback position.
note::If code::pause:: is called when the player is stopped, it will preload the playback buffer and wait for the start of playback. This allows starting playback without additional delay on slower storage or when multiple players are synchronized together::

METHOD:: reset
Updates the player to the initial state (resets playback position, amp, etc.)

METHOD:: view

returns:: If the gui was created, this returns an instance of the code::SFPlayerView::.

METHOD:: attRelTime
Get/Set the time of fade in / fade out when starting/stopping. Increase this value for seamless looping (see below).

subsection:: Looping

note:: For seamless looping, increase code::attRelTime:: and set the code::loopEnd:: parameter to at least code::attRelTime:: less than the soundfile's duration.::

METHOD:: loop
Turn looping on/off by setting loop to code::true:: or code::false::.

METHOD:: loopBeginning
Get/Set loop beginning (in seconds).

METHOD:: loopEnd
Get/Set loop end (in seconds).

METHOD:: loopBeginningEnd
Set both beginning and end of the loop (used by the code::SFPlayerView::).

subsection:: Synchronizing multiple players

It is possible to link multiple players together and have them start playback at the same time.
code::
(
p = SFPlayer.new(Platform.resourceDir +/+ "sounds/a11wlk01.wav").gui;
q = SFPlayer.new(Platform.resourceDir +/+ "sounds/a11wlk01-44_1.aiff").gui;
p.addDependant(q); //p is "master", q is "slave"
)
::

EXAMPLES::

code::
p = SFPlayer.new; //shows open file dialog

//specify the file
p = SFPlayer.new(Platform.resourceDir +/+ "sounds/a11wlk01.wav");
p.play;
p.stop;
p.gui;

// shows open file dialog and opens the gui
p = SFPlayer.new.gui;
::